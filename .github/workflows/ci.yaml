name: Appsync

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: emmett08/appsync

      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Run BDD feature tests
        run: go test ./features -v

      - name: Build CLI
        run: |
          go build -o appsync .
          chmod +x appsync

      - name: Generate sample CRs
        run: |
          ./appsync generate \
            --root ./sample \
            --repos-file repos.yaml \
            --token ${{ secrets.GITHUB_TOKEN }}

  security:
    runs-on: ubuntu-latest
    needs: sync
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v2.1.6
          args: run --timeout 5m

      - name: Go vet
        run: go vet ./...

      - name: Gosec scan
        run: gosec ./...

      - name: Generate SBOM
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          syft . -o cyclonedx-json=sbom.json

      - name: Scan SBOM for vulnerabilities
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          trivy sbom sbom.json --exit-code 1 --format json --output trivy-report.json

      - name: Upload vulnerability report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json
